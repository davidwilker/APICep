unit unitPrincipal;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Edit, FMX.Controls.Presentation, FMX.Ani, FMX.Objects, FMX.Layouts, uFormat,
  REST.Types, FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  Data.DB, FireDAC.Comp.DataSet, FireDAC.Comp.Client, REST.Response.Adapter,
  REST.Client, Data.Bind.Components, Data.Bind.ObjectScope;

type
  TForm1 = class(TForm)
    Image1: TImage;
    Layout1: TLayout;
    Layout2: TLayout;
    Rectangle1: TRectangle;
    Button1: TButton;
    Image2: TImage;
    editCep: TEdit;
    lblCep: TLabel;
    Label1: TLabel;
    RESTClient1: TRESTClient;
    RESTRequest1: TRESTRequest;
    RESTResponse1: TRESTResponse;
    RESTResponseDataSetAdapter1: TRESTResponseDataSetAdapter;
    MemTable: TFDMemTable;
    procedure editCepClick(Sender: TObject);
    procedure editCepTyping(Sender: TObject);
    procedure Button1Click(Sender: TObject);
  private
    procedure ConsultarCEP(cep: string);
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

procedure TForm1.editCepClick(Sender: TObject);
begin
  lblCep.Text := '';
end;

procedure TForm1.editCepTyping(Sender: TObject);
begin
  Formatar(editCep, TFormato.CEP);
end;

procedure TForm1.ConsultarCEP(cep: string);
begin
  if SomenteNumero(editCep.Text).Length <> 8 then
    begin
      ShowMessage('CEP inválido');
      exit;
    end;

    RESTRequest1.Resource := SomenteNumero(editCep.Text) + '/json';

end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  ConsultarCEP(editCep.Text);
end;

end.
